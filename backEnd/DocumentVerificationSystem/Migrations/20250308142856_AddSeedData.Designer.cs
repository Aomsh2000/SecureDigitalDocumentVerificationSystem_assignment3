// <auto-generated />
using System;
using DocumentVerificationSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DocumentVerificationSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250308142856_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VerificationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 3, 8, 17, 28, 55, 610, DateTimeKind.Local).AddTicks(7311),
                            FilePath = "/files/doc1.pdf",
                            Status = "Verified",
                            Title = "Official Document 1",
                            UserId = 1,
                            VerificationCode = "ABCD1234"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 3, 8, 17, 28, 55, 612, DateTimeKind.Local).AddTicks(3792),
                            FilePath = "/files/doc2.pdf",
                            Status = "Pending",
                            Title = "Official Document 2",
                            UserId = 2,
                            VerificationCode = "EFGH5678"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 3, 3, 17, 28, 55, 612, DateTimeKind.Local).AddTicks(3808),
                            FilePath = "/files/doc3.pdf",
                            Status = "Pending",
                            Title = "Official Document 3",
                            UserId = 3,
                            VerificationCode = "IJKL9101"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 2, 26, 17, 28, 55, 612, DateTimeKind.Local).AddTicks(3886),
                            FilePath = "/files/doc4.pdf",
                            Status = "Verified",
                            Title = "Official Document 4",
                            UserId = 4,
                            VerificationCode = "MNOP1122"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 3, 6, 17, 28, 55, 612, DateTimeKind.Local).AddTicks(3890),
                            FilePath = "/files/doc5.pdf",
                            Status = "Verified",
                            Title = "Official Document 5",
                            UserId = 5,
                            VerificationCode = "QRST2233"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 3, 7, 17, 28, 55, 612, DateTimeKind.Local).AddTicks(3893),
                            FilePath = "/files/doc6.pdf",
                            Status = "Pending",
                            Title = "Official Document 6",
                            UserId = 6,
                            VerificationCode = "UVWX3344"
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johndoe@example.com",
                            Name = "John Doe",
                            Password = "password123",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "janesmith@example.com",
                            Name = "Jane Smith",
                            Password = "password456",
                            Role = "User"
                        },
                        new
                        {
                            Id = 3,
                            Email = "michael.johnson@example.com",
                            Name = "Michael Johnson",
                            Password = "password789",
                            Role = "User"
                        },
                        new
                        {
                            Id = 4,
                            Email = "emily.davis@example.com",
                            Name = "Emily Davis",
                            Password = "password101",
                            Role = "User"
                        },
                        new
                        {
                            Id = 5,
                            Email = "david.brown@example.com",
                            Name = "David Brown",
                            Password = "password202",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 6,
                            Email = "sarah.wilson@example.com",
                            Name = "Sarah Wilson",
                            Password = "password303",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("VerificationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("VerificationLogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DocumentId = 1,
                            Status = "Verified",
                            Timestamp = new DateTime(2025, 3, 8, 17, 28, 55, 612, DateTimeKind.Local).AddTicks(5868),
                            VerifiedBy = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            DocumentId = 4,
                            Status = "Verified",
                            Timestamp = new DateTime(2025, 2, 26, 17, 28, 55, 612, DateTimeKind.Local).AddTicks(6290),
                            VerifiedBy = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            DocumentId = 5,
                            Status = "Verified",
                            Timestamp = new DateTime(2025, 3, 6, 17, 28, 55, 612, DateTimeKind.Local).AddTicks(6295),
                            VerifiedBy = "Admin"
                        },
                        new
                        {
                            Id = 4,
                            DocumentId = 2,
                            Status = "Pending",
                            Timestamp = new DateTime(2025, 3, 3, 17, 28, 55, 612, DateTimeKind.Local).AddTicks(6296),
                            VerifiedBy = "Admin"
                        },
                        new
                        {
                            Id = 5,
                            DocumentId = 6,
                            Status = "Pending",
                            Timestamp = new DateTime(2025, 3, 7, 17, 28, 55, 612, DateTimeKind.Local).AddTicks(6298),
                            VerifiedBy = "User"
                        },
                        new
                        {
                            Id = 6,
                            DocumentId = 3,
                            Status = "Pending",
                            Timestamp = new DateTime(2025, 3, 2, 17, 28, 55, 612, DateTimeKind.Local).AddTicks(6300),
                            VerifiedBy = "Admin"
                        });
                });

            modelBuilder.Entity("Document", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany("Documents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VerificationLog", b =>
                {
                    b.HasOne("Document", "Document")
                        .WithMany("VerificationLogs")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("Document", b =>
                {
                    b.Navigation("VerificationLogs");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
